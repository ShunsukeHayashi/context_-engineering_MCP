{
  "id": "ai-general-agent-framework-001",
  "name": "一般化エージェントフレームワーク",
  "description": "動的タスク実行オーケストレーションを使用した汎用エージェントプロンプトフレームワーク",
  "template": "# 一般化エージェントフレームワークプロンプト\n\n## ゴール\nUserのインプットした意図を理解して定められたformatのPromptとして書き換えることです。\n\n**成果物**: 定められたフォーマットに従ったプロンプトのテンプレート\n**コンテキスト情報**: 今まで実施してきた会話の流れを考慮したインコンテキストラーニングが反映された文脈を持ったルール\n\n---\n\n## DynamicTaskExecutionOrchestration Framework\n\n### UserInput Section\n```xml\n<UserInput>\n  <Variable name=\"project_goal\" type=\"String\">\n    <Description>{user_goal_description}</Description>\n  </Variable>\n</UserInput>\n```\n\n### WorkflowCreation Phase\n```xml\n<WorkflowCreation>\n  <DynamicWorkflowGenerator>\n    <Action>GenerateWorkflow</Action>\n    <Thought>\n      {workflow_generation_thought}\n    </Thought>\n    <Instruction>\n      1. ユーザーの目標を詳細に分析し、主要な要素と暗黙の要件を抽出する\n      2. 目標に基づいて、以下の要素を推測または生成する：\n         - プロジェクトの制約条件（時間、予算、リソースなど）\n         - 潜在的なステークホルダーとその役割\n         - 成功基準\n         - 必要となる可能性のあるリソース\n         - 予想されるタイムライン\n         - 関連する業界コンテキスト\n         - 潜在的なリスク要因\n         - 適切なプロジェクト管理手法\n      3. 推測した情報に基づいて、必要なタスクのリストを作成し、優先順位を設定する\n      4. タスク間の依存関係を定義する\n      5. 各タスクにリソースを割り当てる\n      6. リスク要因を考慮し、対応策を組み込む\n      7. コミュニケーション計画を策定する\n      8. 生成したワークフローと推測した情報の整合性を確認する\n    </Instruction>\n    <Output name=\"dynamic_workflow\" type=\"List\"/>\n    <Output name=\"inferred_project_details\" type=\"Map\"/>\n  </DynamicWorkflowGenerator>\n</WorkflowCreation>\n```\n\n### WorkflowExecution Phase\n```xml\n<WorkflowExecution>\n  <IterativeTaskExecution>\n    <ExecutionLoop>\n      <LoopCondition>dynamic_workflow.hasNextTask()</LoopCondition>\n      <CurrentTask>\n        <Action>ExecuteCurrentTask</Action>\n        \n        <!-- Dynamic Thought Generation -->\n        <DynamicThoughtGeneration>\n          <Instruction>\n            1. 現在のタスクの目的と要件を分析する\n            2. タスク実行に必要な具体的なステップを特定する\n            3. 推測されたプロジェクト詳細に基づいて、予想される課題と解決策を考える\n          </Instruction>\n          <Output name=\"task_thought\" type=\"String\"/>\n        </DynamicThoughtGeneration>\n        \n        <!-- Dynamic Instruction Creation -->\n        <DynamicInstructionCreation>\n          <Input name=\"task_thought\" type=\"String\">{task_thought}</Input>\n          <Input name=\"inferred_project_details\" type=\"Map\">{inferred_project_details}</Input>\n          <Instruction>\n            1. 思考プロセスと推測されたプロジェクト詳細に基づいて、具体的な実行手順を作成する\n            2. 各手順を明確かつ実行可能な形で記述する\n            3. 必要なリソースと期待される結果を明確にする\n          </Instruction>\n          <Output name=\"task_instructions\" type=\"List\"/>\n        </DynamicInstructionCreation>\n        \n        <!-- Task Execution -->\n        <TaskExecution>\n          <Input name=\"task_instructions\" type=\"List\">{task_instructions}</Input>\n          <Instruction>\n            1. 作成されたインストラクションに従ってタスクを実行する\n            2. 各ステップの結果を記録する\n            3. 予期せぬ状況が発生した場合は適切に対処し、推測されたプロジェクト詳細を更新する\n          </Instruction>\n          <Output name=\"task_result\" type=\"Map\"/>\n          <Output name=\"updated_project_details\" type=\"Map\"/>\n        </TaskExecution>\n        \n        <!-- Result Analysis -->\n        <ResultAnalysis>\n          <Input name=\"task_result\" type=\"Map\">{task_result}</Input>\n          <Input name=\"updated_project_details\" type=\"Map\">{updated_project_details}</Input>\n          <Thought>\n            {result_analysis_thought}\n          </Thought>\n          <Instruction>\n            1. タスク実行の成功度を評価する\n            2. 主要な結果と洞察を要約する\n            3. 次のタスクに必要な情報を抽出する\n            4. ワークフロー全体に影響を与える可能性のある発見を特定する\n            5. 必要に応じてプロジェクト詳細を更新する\n          </Instruction>\n          <Output name=\"analyzed_result\" type=\"Map\"/>\n          <Output name=\"refined_project_details\" type=\"Map\"/>\n        </ResultAnalysis>\n      </CurrentTask>\n      \n      <!-- Workflow Update -->\n      <WorkflowUpdate>\n        <Input name=\"analyzed_result\" type=\"Map\">{analyzed_result}</Input>\n        <Input name=\"refined_project_details\" type=\"Map\">{refined_project_details}</Input>\n        <Input name=\"dynamic_workflow\" type=\"List\">{dynamic_workflow}</Input>\n        <Thought>\n          {workflow_update_thought}\n        </Thought>\n        <Instruction>\n          1. 分析結果とプロジェクト詳細に基づいて、残りのタスクの妥当性を評価する\n          2. 必要に応じて新しいタスクを追加する\n          3. 既存のタスクの優先順位や内容を調整する\n          4. 更新されたワークフローを確認し、一貫性を保証する\n          5. プロジェクト目標との整合性を確認する\n        </Instruction>\n        <Output name=\"updated_workflow\" type=\"List\"/>\n      </WorkflowUpdate>\n    </ExecutionLoop>\n  </IterativeTaskExecution>\n</WorkflowExecution>\n```\n\n### FinalOutputGeneration Phase\n```xml\n<FinalOutputGeneration>\n  <Action>GenerateFinalReport</Action>\n  <Thought>\n    {final_output_thought}\n  </Thought>\n  <Instruction>\n    1. すべてのタスク結果を収集し、主要な成果と洞察を統合する\n    2. 当初の目標に対する達成度を評価する\n    3. プロジェクト全体の成功要因と課題を分析する\n    4. 推測されたプロジェクト詳細の精度と有用性を評価する\n    5. 将来のプロジェクトのための推奨事項と学習点をまとめる\n    6. 結果を明確で構造化された形式で提示する\n  </Instruction>\n  <Output name=\"final_report\" type=\"Document\"/>\n</FinalOutputGeneration>\n```\n\n### ContinuousImprovement Phase\n```xml\n<ContinuousImprovement>\n  <Action>UpdateSystemKnowledge</Action>\n  <Thought>\n    {continuous_improvement_thought}\n  </Thought>\n  <Instruction>\n    1. プロジェクト全体の実行プロセスを振り返る\n    2. 成功したアプローチと改善が必要な領域を特定する\n    3. プロジェクト詳細の推測精度を評価し、改善点を特定する\n    4. 新しく得られた洞察や最適化の機会を文書化する\n    5. 知識ベースを更新し、アルゴリズムや決定プロセスを調整する\n    6. 更新された知識を検証し、システムの改善度を評価する\n  </Instruction>\n  <Output name=\"knowledge_update_status\" type=\"Boolean\"/>\n</ContinuousImprovement>\n```\n\n---\n\n## FinalProjectOutput Structure\n\n### ProjectOverview\n```xml\n<ProjectOverview>\n  <Title>{project_title}</Title>\n  <Goal>{user_input_goal}</Goal>\n  <ExecutiveSummary>\n    {project_executive_summary}\n  </ExecutiveSummary>\n</ProjectOverview>\n```\n\n### DetailedAnalysis\n```xml\n<DetailedAnalysis>\n  <InferredProjectDetails>\n    <Constraints>{inferred_constraints}</Constraints>\n    <Stakeholders>{inferred_stakeholders}</Stakeholders>\n    <Timeline>{inferred_timeline}</Timeline>\n    <Resources>{inferred_resources}</Resources>\n    <RiskFactors>{inferred_risk_factors}</RiskFactors>\n  </InferredProjectDetails>\n  \n  <WorkflowExecution>\n    <OverallPerformance>{workflow_performance_summary}</OverallPerformance>\n    <TaskBreakdown>\n      <!-- For each task -->\n      <Task>\n        <Name>{task_name}</Name>\n        <Description>{task_description}</Description>\n        <Outcome>{task_outcome}</Outcome>\n        <Challenges>{task_challenges}</Challenges>\n        <Insights>{task_insights}</Insights>\n      </Task>\n      <!-- End for each -->\n    </TaskBreakdown>\n  </WorkflowExecution>\n  \n  <KeyFindings>\n    <MajorAchievements>{major_achievements}</MajorAchievements>\n    <UnexpectedOutcomes>{unexpected_outcomes}</UnexpectedOutcomes>\n    <LessonsLearned>{lessons_learned}</LessonsLearned>\n  </KeyFindings>\n</DetailedAnalysis>\n```\n\n### ImpactAssessment\n```xml\n<ImpactAssessment>\n  <GoalAchievement>\n    <OriginalGoal>{user_input_goal}</OriginalGoal>\n    <AchievementLevel>{goal_achievement_level}</AchievementLevel>\n    <Analysis>{goal_achievement_analysis}</Analysis>\n  </GoalAchievement>\n  <BusinessImpact>{business_impact}</BusinessImpact>\n  <StakeholderValue>{stakeholder_value}</StakeholderValue>\n  <InnovationContribution>{innovation_contribution}</InnovationContribution>\n</ImpactAssessment>\n```\n\n### FutureRecommendations\n```xml\n<FutureRecommendations>\n  <StrategicInsights>{strategic_insights}</StrategicInsights>\n  <ImprovementAreas>{improvement_areas}</ImprovementAreas>\n  <NextSteps>{recommended_next_steps}</NextSteps>\n  <LongTermVision>{long_term_vision}</LongTermVision>\n</FutureRecommendations>\n```\n\n### TechnicalAppendix\n```xml\n<TechnicalAppendix>\n  <MethodologyOverview>{methodology_overview}</MethodologyOverview>\n  <DataAnalytics>{data_analytics_summary}</DataAnalytics>\n  <AIModelPerformance>{ai_model_performance}</AIModelPerformance>\n  <SystemArchitecture>{system_architecture_diagram}</SystemArchitecture>\n  <CodeSnippets>{key_code_snippets}</CodeSnippets>\n</TechnicalAppendix>\n```\n\n### Acknowledgements\n```xml\n<Acknowledgements>\n  <TeamContributions>{team_contributions}</TeamContributions>\n  <ExternalCollaborations>{external_collaborations}</ExternalCollaborations>\n  <SpecialThanks>{special_thanks}</SpecialThanks>\n</Acknowledgements>\n```\n\n### FuturePotential\n```xml\n<FuturePotential>\n  <ScalabilityAnalysis>{scalability_analysis}</ScalabilityAnalysis>\n  <MarketOpportunities>{market_opportunities}</MarketOpportunities>\n  <TechnologyTrends>{relevant_technology_trends}</TechnologyTrends>\n  <PotentialApplications>{potential_applications}</PotentialApplications>\n</FuturePotential>\n```\n\n---\n\n## 使用方法\n\n1. **UserInput**: プロジェクトの主要目標を{user_input_goal}に入力\n2. **WorkflowCreation**: システムが自動的にワークフローと詳細を推測\n3. **WorkflowExecution**: 各タスクを順次実行し、動的に調整\n4. **FinalOutput**: 包括的なプロジェクトレポートを生成\n5. **ContinuousImprovement**: システム知識を更新し、将来の性能を向上\n\n## 特徴\n\n- **動的ワークフロー生成**: ユーザー目標から自動的にタスクフローを作成\n- **コンテキスト推測**: 明示されていない要件や制約を推測\n- **反復実行**: タスク実行中の学習と調整\n- **包括的レポート**: 詳細な分析と将来の推奨事項\n- **継続的改善**: システム性能の向上メカニズム",
  "variables": [
    "user_goal_description",
    "workflow_generation_thought",
    "result_analysis_thought",
    "workflow_update_thought",
    "final_output_thought",
    "continuous_improvement_thought",
    "project_title",
    "user_input_goal",
    "project_executive_summary",
    "inferred_constraints",
    "inferred_stakeholders",
    "inferred_timeline",
    "inferred_resources",
    "inferred_risk_factors",
    "workflow_performance_summary",
    "task_name",
    "task_description",
    "task_outcome",
    "task_challenges",
    "task_insights",
    "major_achievements",
    "unexpected_outcomes",
    "lessons_learned",
    "goal_achievement_level",
    "goal_achievement_analysis",
    "business_impact",
    "stakeholder_value",
    "innovation_contribution",
    "strategic_insights",
    "improvement_areas",
    "recommended_next_steps",
    "long_term_vision",
    "methodology_overview",
    "data_analytics_summary",
    "ai_model_performance",
    "system_architecture_diagram",
    "key_code_snippets",
    "team_contributions",
    "external_collaborations",
    "special_thanks",
    "scalability_analysis",
    "market_opportunities",
    "relevant_technology_trends",
    "potential_applications"
  ],
  "type": "completion",
  "category": "ai-agents",
  "tags": ["general-agent", "dynamic-workflow", "orchestration", "xml-format", "project-management"],
  "usage_count": 0,
  "quality_score": 96.0,
  "created_by": "system",
  "created_at": "2025-07-26T00:00:00.000000",
  "updated_at": "2025-07-26T00:00:00.000000",
  "metadata": {
    "industry": "technology",
    "skill_level": "expert",
    "estimated_tokens": 1400,
    "languages": ["ja", "en"],
    "use_cases": ["dynamic_workflow", "general_purpose_agent", "project_orchestration", "xml_templating"],
    "optimization_goals": ["flexibility", "automation", "adaptability"],
    "complexity": "high",
    "framework": "xml_based"
  }
}